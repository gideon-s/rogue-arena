// Generated by CoffeeScript 1.7.1
(function() {
  test("Random Returns number between 0 and 9", function() {
    var actual, index, number, _i, _results;
    _results = [];
    for (index = _i = 1; _i <= 200; index = ++_i) {
      number = Util.rand(10);
      actual = number <= 10 && number >= 0 ? true : false;
      _results.push(equal(actual, true));
    }
    return _results;
  });

  test("Random Returns integer", function() {
    var actual, index, number, _i, _results;
    _results = [];
    for (index = _i = 1; _i <= 100; index = ++_i) {
      number = Util.rand(50);
      actual = parseFloat(number) === parseInt(number) ? true : false;
      _results.push(equal(actual, true));
    }
    return _results;
  });

  test("pickRandom Returns items from list", function() {
    var index, listOfThings, result, t, thing, _i, _j, _len, _results;
    listOfThings = ['head', 'right arm', 'left arm', 'chest', 'groin', 'right leg', 'left leg'];
    result = {};
    for (index = _i = 1; _i <= 100; index = ++_i) {
      thing = Util.pickRandom(listOfThings);
      result[thing] || (result[thing] = 0);
      result[thing] += 1;
    }
    _results = [];
    for (_j = 0, _len = listOfThings.length; _j < _len; _j++) {
      t = listOfThings[_j];
      _results.push(ok(result[t], "failed to find " + t));
    }
    return _results;
  });

  test("Map 1 and Map 2 should contain different characters at 0,0", function() {
    var map1, map2;
    map1 = new Map(3, 3);
    map2 = new Map(3, 3);
    map1.setLocation([0, 0], "@");
    equal("@", map1.at([0, 0]));
    map2.setLocation([0, 0], "$");
    equal("$", map2.at([0, 0]));
    return notEqual(map1.at([0, 0]), map2.at([0, 0]));
  });

  test("locations of map should return list of x,y pairs", function() {
    var map;
    map = new Map(5, 5);
    map.setLocation([0, 0], "X");
    deepEqual([[0, 0]], map.locations());
    map.setLocation([0, 1], ".");
    return deepEqual([[0, 0], [0, 1]], map.locations());
  });

  test("Is open map area", function() {
    var map;
    map = new Map(10, 10);
    map.setLocation([2, 3], ".");
    ok(map.isOpen([2, 3]));
    return ok(!map.isOpen([2, 4]));
  });

  test("map.randomLocation returns realistic value spread", function() {
    var actual, i, location, map, val, x, y, _i, _j, _k, _len, _ref, _ref1;
    map = new Map(10, 10);
    for (i = _i = 0; _i < 10; i = ++_i) {
      map.setLocation([0, i], "0");
    }
    for (i = _j = 0; _j < 100; i = ++_j) {
      _ref = map.randomLocation(), x = _ref[0], y = _ref[1];
      val = map.at([x, y]);
      val++;
      map.setLocation([x, y], val);
      actual = true;
    }
    _ref1 = map.locations();
    for (_k = 0, _len = _ref1.length; _k < _len; _k++) {
      location = _ref1[_k];
      if (map.at(location) > 18 || map.at(location) < 3) {
        actual = false;
      }
    }
    return equal(actual, true);
  });

}).call(this);
