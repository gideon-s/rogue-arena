// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Player = (function(_super) {
    __extends(Player, _super);

    function Player(game, location) {
      Player.__super__.constructor.call(this, game, location, "@", "white", 50);
      console.log("player constructor started");
      this.score = 0;
      this.shotsFired = 0;
      this.lastCode = {};
      this.allowedKeys = {};
      this.allowedKeys[ROT.VK_W] = 1;
      this.allowedKeys[ROT.VK_A] = 1;
      this.allowedKeys[ROT.VK_S] = 1;
      this.allowedKeys[ROT.VK_D] = 1;
      console.log(this.allowedKeys);
      window.addEventListener("keydown", this);
    }

    Player.prototype.handleEvent = function(e) {
      console.log(this.allowedKeys);
      if (this.allowedKeys[e.keyCode] !== 1) {
        return;
      }
      console.log(this.lastCode);
      this.lastCode[e.keyCode] = 1;
      return console.log(this.lastCode);
    };

    Player.prototype.moveDir = function(dirIndex) {
      var dir, nextLocation;
      dir = ROT.DIRS[8][dirIndex];
      nextLocation = this.location.addDir(dir);
      if (!this.game.map.isOpen(nextLocation)) {
        return;
      }
      return this.location = nextLocation;
    };

    Player.prototype.fire = function(dirIndex) {
      var dir, nextLocation;
      dir = ROT.DIRS[8][dirIndex];
      nextLocation = this.location.addDir(dir);
      new Projectile(this.game, nextLocation, dir);
      return this.shotsFired++;
    };

    Player.prototype.addScore = function() {
      this.score++;
      return this.game.drawScore();
    };

    Player.prototype.act = function(e) {
      var dir;
      console.log(this.lastCode);
      if (this.lastCode[ROT.VK_W] === 1) {
        dir = 1;
      }
      return this.moveDir(dir);
    };

    return Player;

  })(window.Actor);

}).call(this);
