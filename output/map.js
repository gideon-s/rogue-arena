// Generated by CoffeeScript 1.7.1
(function() {
  window.Map = (function() {
    function Map(game, width, height) {
      var x, y, _i, _j, _ref, _ref1;
      this.game = game;
      this.width = width;
      this.height = height;
      this.map = new Array(this.width);
      this.map = (function() {
        var _i, _ref, _results;
        _results = [];
        for (x = _i = 0, _ref = this.width; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {
          _results.push(this.map[x] = new Array(this.height));
        }
        return _results;
      }).call(this);
      for (x = _i = 0, _ref = this.width; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {
        for (y = _j = 0, _ref1 = this.height; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; y = 0 <= _ref1 ? ++_j : --_j) {
          this.setLocation(new Location(this.game, [x, y]), " ");
        }
      }
    }

    Map.prototype.at = function(location) {
      return location.on(this.map);
    };

    Map.prototype.setLocation = function(location, symbol) {
      return location.setOn(this.map, symbol);
    };

    Map.prototype.isOpen = function(location) {
      return this.at(location) != null;
    };

    Map.prototype.addIfOpen = function(result, pair) {
      var location;
      location = new Location(this.game, pair);
      if (this.isOpen(location)) {
        return result.push(location);
      }
    };

    Map.prototype.locations = function() {
      var result, x, y, _i, _j, _ref, _ref1;
      result = [];
      for (x = _i = 0, _ref = this.width; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {
        for (y = _j = 0, _ref1 = this.height; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; y = 0 <= _ref1 ? ++_j : --_j) {
          this.addIfOpen(result, [x, y]);
        }
      }
      return result;
    };

    Map.prototype.randomLocation = function() {
      return Util.pickRandom(this.locations());
    };

    Map.prototype.randomEdgeLocation = function() {
      return Util.pickRandom(this.edgeLocations());
    };

    Map.prototype.edgeLocations = function() {
      var result, x, y, _i, _j, _ref, _ref1;
      result = [];
      for (x = _i = 0, _ref = this.width; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {
        this.addIfOpen(result, [x, 0]);
        this.addIfOpen(result, [x, this.height - 1]);
      }
      for (y = _j = 1, _ref1 = this.height - 1; 1 <= _ref1 ? _j < _ref1 : _j > _ref1; y = 1 <= _ref1 ? ++_j : --_j) {
        this.addIfOpen(result, [0, y]);
        this.addIfOpen(result, [this.width - 1, y]);
      }
      return result;
    };

    return Map;

  })();

}).call(this);
