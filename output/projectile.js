// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.AgingActor = (function(_super) {
    __extends(AgingActor, _super);

    function AgingActor(game, location, sigil, color, speed, maxLife) {
      this.maxLife = maxLife;
      AgingActor.__super__.constructor.call(this, game, location, sigil, color, speed);
    }

    AgingActor.prototype.action = function() {
      if (this.dead) {
        return;
      }
      this.maxLife -= 1;
      if (this.maxLife <= 0) {
        this.died("old age");
        return;
      }
      this.youngAction();
      return AgingActor.__super__.action.apply(this, arguments);
    };

    return AgingActor;

  })(window.Actor);

  window.OwnedActorWithLifespan = (function(_super) {
    __extends(OwnedActorWithLifespan, _super);

    function OwnedActorWithLifespan(game, location, owner, maxLife, sigil, color, speed) {
      this.owner = owner;
      OwnedActorWithLifespan.__super__.constructor.call(this, game, location, sigil, color, speed, maxLife);
    }

    OwnedActorWithLifespan.prototype.moveDirection = function(direction) {
      var nextLoc;
      nextLoc = this.location.addDir(direction);
      return this.moveTo(nextLoc);
    };

    return OwnedActorWithLifespan;

  })(window.AgingActor);

  window.Projectile = (function(_super) {
    __extends(Projectile, _super);

    function Projectile(game, location, owner, maxLife, sigil, color, speed, direction) {
      this.direction = direction;
      Projectile.__super__.constructor.call(this, game, location, owner, maxLife, sigil, color, speed);
    }

    Projectile.prototype.youngAction = function() {
      return this.moveDirection(this.direction);
    };

    return Projectile;

  })(window.OwnedActorWithLifespan);

  window.HomingProjectile = (function(_super) {
    __extends(HomingProjectile, _super);

    function HomingProjectile(game, location, owner, maxLife, color, xyDir) {
      HomingProjectile.__super__.constructor.call(this, game, location, owner, maxLife, "*", color, 50, xyDir);
    }

    HomingProjectile.prototype.nearestMonster = function() {
      var closest, currentClosestDistance, dir, i, look, monster, monsterDistance, _i, _j;
      closest = void 0;
      for (dir = _i = 0; _i <= 7; dir = ++_i) {
        for (i = _j = 1; _j <= 4; i = ++_j) {
          look = this.location.addDir(Util.xyDir(dir), i);
          monster = _.find(look.otherActors(this), (function(_this) {
            return function(a) {
              return a instanceof Enemy && !(a instanceof Citizen);
            };
          })(this));
          if (monster != null) {
            if (closest != null) {
              currentClosestDistance = Util.distance(closest, this.location);
              monsterDistance = Util.distance(closest, monster.location);
              if (monsterDistance < currentClosestDistance) {
                closest = monster;
              }
            } else {
              closest = monster;
            }
          }
        }
      }
      return closest;
    };

    HomingProjectile.prototype.youngAction = function() {
      var dir;
      if (this.target == null) {
        this.target = this.nearestMonster();
      }
      if (this.target != null) {
        dir = this.actorXYDirection(8, this.target);
      } else {
        dir = this.direction;
      }
      return this.moveDirection(dir);
    };

    return HomingProjectile;

  })(window.Projectile);

  window.RescueProjectile = (function(_super) {
    __extends(RescueProjectile, _super);

    function RescueProjectile() {
      return RescueProjectile.__super__.constructor.apply(this, arguments);
    }

    return RescueProjectile;

  })(window.Projectile);

  window.Particle = (function(_super) {
    __extends(Particle, _super);

    function Particle(game, location, owner, maxLife, colorizor, speed) {
      if (maxLife == null) {
        maxLife = Util.rand(20);
      }
      this.colorizor = colorizor != null ? colorizor : Colors.fire;
      if (speed == null) {
        speed = 20;
      }
      Particle.__super__.constructor.call(this, game, location, owner, maxLife, "#", this.colorizor.color(), speed);
    }

    Particle.prototype.youngAction = function() {
      var nextLoc;
      nextLoc = this.location.addDir(Util.rand8Dir());
      return this.moveTo(nextLoc);
    };

    return Particle;

  })(window.OwnedActorWithLifespan);

  window.UnmovingCloud = (function(_super) {
    __extends(UnmovingCloud, _super);

    function UnmovingCloud(game, location, maxLife, colorizor) {
      if (maxLife == null) {
        maxLife = Util.rand(100) + 100;
      }
      this.colorizor = colorizor != null ? colorizor : Colors.fire;
      UnmovingCloud.__super__.constructor.call(this, game, location, "#", this.colorizor.color(), 100, maxLife);
    }

    UnmovingCloud.prototype.youngAction = function() {};

    return UnmovingCloud;

  })(window.AgingActor);

  window.ColdCloud = (function(_super) {
    __extends(ColdCloud, _super);

    function ColdCloud(game, location, owner, maxLife, colorizor) {
      this.owner = owner;
      if (maxLife == null) {
        maxLife = 10;
      }
      this.colorizor = colorizor != null ? colorizor : Colors.cold;
      ColdCloud.__super__.constructor.call(this, game, location, maxLife, this.colorizor);
    }

    ColdCloud.prototype.youngAction = function() {};

    return ColdCloud;

  })(window.UnmovingCloud);

  window.Ball = (function(_super) {
    __extends(Ball, _super);

    function Ball(game, location, direction, owner, maxLife) {
      if (maxLife == null) {
        maxLife = 30;
      }
      this.colorizor = Colors.fire;
      Ball.__super__.constructor.call(this, game, location, owner, maxLife, "+", this.colorizor.color(), 20, direction);
    }

    Ball.prototype.died = function(reason) {
      var dir, firstLocation, xyDir, _i, _results;
      Ball.__super__.died.call(this, reason);
      _results = [];
      for (dir = _i = 0; _i <= 7; dir = ++_i) {
        xyDir = Util.xyDir(dir);
        firstLocation = this.location.addDir(xyDir);
        _results.push(this.emit(firstLocation, xyDir));
      }
      return _results;
    };

    Ball.prototype.emit = function(firstLocation, xyDir) {
      return new BallParticle(this.game, firstLocation, xyDir, this.owner, Util.rand(3) + 1);
    };

    return Ball;

  })(window.Projectile);

  window.BallParticle = (function(_super) {
    __extends(BallParticle, _super);

    function BallParticle() {
      return BallParticle.__super__.constructor.apply(this, arguments);
    }

    BallParticle.prototype.emit = function(firstLocation, xyDir) {
      return new Particle(this.game, firstLocation, this.owner, Util.rand(5));
    };

    return BallParticle;

  })(window.Ball);

}).call(this);
