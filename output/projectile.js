// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Projectile = (function(_super) {
    __extends(Projectile, _super);

    function Projectile(game, location, direction, owner, color, maxLife) {
      this.direction = direction;
      this.owner = owner;
      if (color == null) {
        color = "yellow";
      }
      this.maxLife = maxLife != null ? maxLife : 1000;
      Projectile.__super__.constructor.call(this, game, location, "+", color, 20);
    }

    Projectile.prototype.act = function() {
      var nextLoc;
      nextLoc = this.location.addDir(this.direction);
      this.maxLife = this.maxLife - 1;
      if (nextLoc.hasOtherActor(this, this.owner) || this.maxLife < 0) {
        this.dead = true;
        return;
      }
      return this.location = nextLoc;
    };

    Projectile.prototype.struckBy = function(entity) {
      if (entity === this.owner) {
        return;
      }
      return Projectile.__super__.struckBy.call(this, entity);
    };

    return Projectile;

  })(window.Actor);

}).call(this);
