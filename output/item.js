// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Item = (function() {
    function Item(game, location, options) {
      this.game = game;
      this.location = location;
      this.options = options != null ? options : {};
      this.sigil = this.options.sigil;
      this.color = this.options.color;
      this.location.arriving(this);
    }

    Item.prototype.message = function(text) {
      var i, _i, _ref;
      for (i = _i = 0, _ref = this.game.width; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        this.game.display.draw(i, this.game.height, " ");
      }
      return this.game.display.drawText(5, this.game.height, text, 1000);
    };

    Item.prototype.pickedUp = function() {};

    return Item;

  })();

  window.Scroll = (function(_super) {
    __extends(Scroll, _super);

    function Scroll(location, options) {
      this.location = location;
      if (options == null) {
        options = {};
      }
      if (options.sigil == null) {
        options.sigil = '?';
      }
      if (options.color == null) {
        options.color = 'yellow';
      }
      Scroll.__super__.constructor.call(this, this.location.game, this.location, options);
    }

    Scroll.prototype.pickedUp = function() {
      return this.message(this.game.spawner.level().text());
    };

    return Scroll;

  })(window.Item);

  window.OneUp = (function(_super) {
    __extends(OneUp, _super);

    function OneUp(location, options) {
      this.location = location;
      if (options == null) {
        options = {};
      }
      if (options.sigil == null) {
        options.sigil = '%';
      }
      if (options.color == null) {
        options.color = 'cyan';
      }
      OneUp.__super__.constructor.call(this, this.location.game, this.location, options);
    }

    OneUp.prototype.pickedUp = function() {
      var _base;
      if ((_base = this.game.player).hits == null) {
        _base.hits = 0;
      }
      this.game.player.hits += 1;
      return this.message("I feel" + (this.game.player.hits === 1 ? '' : ' more') + " protected!");
    };

    return OneUp;

  })(window.Item);

}).call(this);
