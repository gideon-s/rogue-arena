// Generated by CoffeeScript 1.7.1
(function() {
  window.Game = {
    display: null,
    map: new Map(ROT.DEFAULT_WIDTH, ROT.DEFAULT_HEIGHT),
    engine: null,
    player: null,
    dragon: null,
    ananas: null,
    init: function() {
      var scheduler;
      this.display = new ROT.Display({
        spacing: 1.1
      });
      document.body.appendChild(this.display.getContainer());
      this._generateMap();
      scheduler = new ROT.Scheduler.Simple();
      scheduler.add(this.player, true);
      scheduler.add(this.dragon, true);
      this.engine = new ROT.Engine(scheduler);
      return this.engine.start();
    },
    _generateMap: function() {
      var digCallback, digger;
      digger = new ROT.Map.Digger();
      digCallback = function(x, y, value) {
        if (value) {
          return;
        }
        return this.map.setLocation([x, y], ".");
      };
      digger.create(digCallback.bind(this));
      this._generateBoxes();
      this._drawWholeMap();
      this.player = this._createBeing(Player);
      return this.dragon = this._createBeing(Enemy);
    },
    _createBeing: function(what) {
      var x, y, _ref;
      _ref = this.map.randomLocation(), x = _ref[0], y = _ref[1];
      return new what(x, y);
    },
    _generateBoxes: function() {
      var i, randLoc, _results;
      i = 0;
      _results = [];
      while (i < 10) {
        randLoc = this.map.randomLocation();
        this.map.setLocation(randLoc, "*");
        if (!i) {
          this.ananas = randLoc;
        }
        _results.push(i++);
      }
      return _results;
    },
    _drawWholeMap: function() {
      var location, _i, _len, _ref, _results;
      _ref = this.map.locations();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        location = _ref[_i];
        _results.push(this.display.draw(location[0], location[1], this.map.at(location)));
      }
      return _results;
    }
  };

  Game.init();

}).call(this);
